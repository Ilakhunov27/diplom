// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
function updateTempValue() {
    document.getElementById('tempValue').innerText = document.getElementById('temperature').value;
}

async function sendData() {
    let temperature = document.getElementById('temperature').value;

    let response = await fetch('/laboratory_visualisation', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ temperature: temperature })
    });

    let result = await response.json();
    document.getElementById('output').innerText = '–†–µ–∑—É–ª—å—Ç–∞—Ç: ' + result.output;

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
    setTimeout(loadTableData, 500);
}


async function loadTableData() {
    let response = await fetch('/extra_files/TableCalcData.json');

    if (!response.ok) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:", response.status);
        return;
    }

    let data = await response.json();
    console.log("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data);  // üëâ –í—ã–≤–æ–¥ JSON –≤ –∫–æ–Ω—Å–æ–ª—å

    updateTable1(data["table 1"]);
    updateTable2(data["table 2"]);
    updateTable3(data["table 3"]);
}

function updateTable1(tableData) {
    let tbody = document.getElementById("table1");
    tbody.innerHTML = "";  // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö

    for (let i = 0; i < tableData["tay"].length; i++) {
        let row = `<tr>
            <td>${tableData["t(–Ω–∞—á)"][i]}</td>
            <td>${tableData["t(–∫–æ–Ω)"][i]}</td>
            <td>${tableData["tay"][i]}</td>
        </tr>`;
        tbody.innerHTML += row;
    }
}

function updateTable2(tableData) {
    let tbody = document.getElementById("table2");
    tbody.innerHTML = "";

    for (let i = 0; i < tableData["tay"].length; i++) {
        let row = `<tr>
            <td>${tableData["tay"][i]}</td>
            <td>${tableData["n"][i]}</td>
            <td>${tableData["T"][i]}</td>
            <td>${tableData["1/T"][i]}</td>
            <td>${tableData["n/T"][i]}</td>
            <td>${tableData["ln(n/T)"][i]}</td>
        </tr>`;
        tbody.innerHTML += row;
    }
}

function updateTable3(tableData) {
    let tbody = document.getElementById("table3");
    tbody.innerHTML = "";

    for (let i = 0; i < tableData["x"].length; i++) {
        let row = `<tr>
            <td>${i + 1}</td>
            <td>${tableData["x"][i]}</td>
            <td>${tableData["y"][i]}</td>
            <td>${tableData["x^2"][i]}</td>
            <td>${tableData["x*y"][i]}</td>
        </tr>`;
        tbody.innerHTML += row;
    }
}




function updateGraph() {
    let graphImg = document.getElementById('graphImage');
    graphImg.src = '/static/plot.png?' + new Date().getTime(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
}

function openPopup(id) {
    document.getElementById(id).style.display = 'block';
}

function closePopup(id) {
    document.getElementById(id).style.display = 'none';
}


function changeLiquid() {
    let selectedLiquid = document.getElementById('liquid-select').value;

    fetch('/laboratory_visualisation', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({liquid: selectedLiquid})
    })
    .then(response => response.json())
    .then(data => {
        console.log("–í—ã–±—Ä–∞–Ω–∞ –∂–∏–¥–∫–æ—Å—Ç—å:", selectedLiquid, "–ü–ª–æ—Ç–Ω–æ—Å—Ç—å:", data.ro);
    });
}

async function clearTableCalcData() {
    let response = await fetch('/extra_files/TableCalcData.json');

    if (!response.ok) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:", response.status);
        return;
    }

    let data = await response.json();

    // –û—á–∏—â–∞–µ–º –≤—Å–µ –º–∞—Å—Å–∏–≤—ã –≤–Ω—É—Ç—Ä–∏ JSON
    for (let table of Object.values(data)) {
        for (let key in table) {
            table[key] = [];
        }
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    await fetch('/save_table_data', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
    });

    console.log("–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.");
}

